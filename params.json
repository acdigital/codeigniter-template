{"name":"Codeigniter-template","tagline":"Template system for Code Igniter","body":"#CodeIgniter Template LIbrary\r\n\r\n* [By Chris Duell](http://chrisduell.com/)\r\n* Version: 2.1\r\n\r\n## Description\r\n\r\nA template library for CodeIgniter 2.0, which allows you to quickly build and organise your CI site using a template system.\r\n\r\nThe base template view is formatted to make use of the [Twitter Bootstrap CSS](http://twitter.github.com/bootstrap/) to get you up and running with a neat looking app, fast.\r\n\r\nResolves an issue with IE caching page elements. Thanks to Steve from [Innexio](http://www.innexio.com.au) for the fix\r\n\r\nAs a side note, it also works perfectly with [HMVC by wiredesignz](https://bitbucket.org/wiredesignz/codeigniter-modular-extensions-hmvc)\r\n\r\n##Development by\r\n\r\n* Chris Duell - Lead Developer ([http://chrisduell.com](http://chrisduell.com))\r\n* With thanks to Matt Trimarchi - ([http://studio372.com.au](http://studio372.com), worked on V1.0 together.\r\n\r\n###Contributors\r\n\r\n* [robbiek](https://github.com/robbiek)\r\n* Steve from [Innexio](http://www.innexio.com.au)\r\n\r\n##Requirements\r\n\r\nCode Igniter 2.0\r\n\r\n##Usage\r\n\r\nDownload and place the files in your CI installation, following the same folder structure. Add the assets folder to your root, this is where you'll put your images / css / js files.\r\n\r\nAdd 'template' to your autoload file in the libraries config item. \r\n\r\nMake sure that you are also autoloading the session library, and that you have set an encryption key in your app/config/config.php file.\r\n\r\nUpdate the config/template.php file to set your base template settings such as the sites name, title, and other items like which css and js files are always loaded.\r\n\r\nA quick example to get you going is to update the default welcome controller in CI to use this library:\r\n\r\n\tclass Welcome extends CI_Controller {\r\n\t\r\n\t\tfunction __construct(){\r\n\t\t\tparent::__construct();\r\n\t\t}\r\n\t\r\n\t\tfunction index() {\r\n\t\t\t$data = array('some_variable' => 'some_data');\r\n\t\t\r\n\t\t\t$this->template->add_message('success', 'You are using duellsys template library');\r\n\t\t\t$this->template->add_message('info', 'Awesome!');\r\n\t\t\r\n\t\t\t$this->template->set_content('example', $data);\r\n\t\t\t$this->template->build();\r\n\t\t}\r\n\t}\r\n\r\n##Available methods\r\n\r\n####function set_content($view, $data = array())\r\nLoad the content for the main area of the page, and store\r\nin the data array to be later sent to the template\r\n\t\r\n####function clear_css()\r\nClears all CSS. Raw and scripts\r\n\t\r\n####function add_css($css, $load = true)\r\nBy default, the CSS will be loaded using the normal <link> method\r\nOptionally, you can choose to have the contents of the file dumped \r\nstraight to screen to reduce the number of resources the browser\r\nneeds to load at run time\r\n\t\r\n####function clear_js()\r\nClears all JS. Raw and scripts\r\n\t\r\n####function add_js($js, $load = true)\r\nBy default, the CSS will be loaded using the normal <link> method\r\nOptionally, you can choose to have the contents of the file dumped \r\nstraight to screen to reduce the number of resources the browser\r\nneeds to load at run time\r\n\t\t\t\r\n####function clear_head()\r\nClear all data in the head\r\n\r\n####function add_head($head)\r\nAdd tag to head\r\n\r\n####function add_message($type, $message)\r\nAdds a message to the current page stack\r\nAvailable types are warning, error, success and info\r\n\r\n####function set_flashdata($type, $message)\r\nServes purely as a wrapper for the CI flashdata\r\nJust to keep syntax organised\r\n\r\n####function prepare_messages()\r\nFormats the messages added to the stack, \r\nand any warning, error, success and info messages \r\nthat were added via session->flashdata\r\n\r\n####function build()\r\nSend the data compiled data to the screen\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}